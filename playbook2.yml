# playbook.yml

---
- name: Appeler une API paginée avec gestion des erreurs et retry
  hosts: localhost
  gather_facts: false
  vars:
    api_url: "https://server:port/api/v2/hosts/"
    page_size: 50
    max_retries: 3
  tasks:
    - name: Initialiser la liste des serveurs
      set_fact:
        all_servers: []

    - name: Récupérer la première page avec retry
      uri:
        url: "{{ api_url }}?page_size={{ page_size }}&page=1"
        method: GET
        status_code: 200
        return_content: yes
        timeout: 10
      register: api_response
      until: api_response.status == 200
      retries: "{{ max_retries }}"
      delay: 5

    - name: Ajouter les serveurs de la première page à la liste
      set_fact:
        all_servers: "{{ all_servers + api_response.json.results }}"

    - name: Déterminer le nombre total de pages
      set_fact:
        total_pages: "{{ (api_response.json.count + page_size - 1) // page_size }}"

    - name: Récupérer les pages suivantes avec retry
      set_fact:
        current_page: 2
      loop: "{{ range(2, total_pages + 1) }}"
      loop_control:
        loop_var: current_page
      tasks:
        - name: Récupérer la page suivante
          uri:
            url: "{{ api_url }}?page_size={{ page_size }}&page={{ current_page }}"
            method: GET
            status_code: 200
            return_content: yes
            timeout: 10
          register: api_response
          until: api_response.status == 200
          retries: "{{ max_retries }}"
          delay: 5

        - name: Ajouter les serveurs de la page suivante à la liste
          set_fact:
            all_servers: "{{ all_servers + api_response.json.results }}"

    - name: Afficher la liste complète des serveurs
      debug:
        var: all_servers
